apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-catalog
  name: a2a-go-catalog
spec:
  selector:
    matchLabels:
      app: a2a-go-catalog
  template:
    metadata:
      labels:
        app: a2a-go-catalog
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-catalog
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["catalog"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-slack
  name: a2a-go-slack
spec:
  selector:
    matchLabels:
      app: a2a-go-slack
  template:
    metadata:
      labels:
        app: a2a-go-slack
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-slack
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["slack"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-webhook
  name: a2a-go-webhook
spec:
  selector:
    matchLabels:
      app: a2a-go-webhook
  template:
    metadata:
      labels:
        app: a2a-go-webhook
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-webhook
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["webhook"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-dockertool
  name: a2a-go-dockertool
spec:
  selector:
    matchLabels:
      app: a2a-go-dockertool
  template:
    metadata:
      labels:
        app: a2a-go-dockertool
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-dockertool
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["mcp", "-c", "docker"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-browsertool
  name: a2a-go-browsertool
spec:
  selector:
    matchLabels:
      app: a2a-go-browsertool
  template:
    metadata:
      labels:
        app: a2a-go-browsertool
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-browsertool
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["mcp", "-c", "browser"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-catalogtool
  name: a2a-go-catalogtool
spec:
  selector:
    matchLabels:
      app: a2a-go-catalogtool
  template:
    metadata:
      labels:
        app: a2a-go-catalogtool
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-catalogtool
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["mcp", "-c", "catalog"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-managementtool
  name: a2a-go-managementtool
spec:
  selector:
    matchLabels:
      app: a2a-go-managementtool
  template:
    metadata:
      labels:
        app: a2a-go-managementtool
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-managementtool
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["mcp", "-c", "management"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-ui
  name: a2a-go-ui
spec:
  selector:
    matchLabels:
      app: a2a-go-ui
  template:
    metadata:
      labels:
        app: a2a-go-ui
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-ui
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["agent", "-c", "ui"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-manager
  name: a2a-go-manager
spec:
  selector:
    matchLabels:
      app: a2a-go-manager
  template:
    metadata:
      labels:
        app: a2a-go-manager
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-manager
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["agent", "-c", "manager"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-planner
  name: a2a-go-planner
spec:
  selector:
    matchLabels:
      app: a2a-go-planner
  template:
    metadata:
      labels:
        app: a2a-go-planner
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-planner
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["agent", "-c", "planner"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-researcher
  name: a2a-go-researcher
spec:
  selector:
    matchLabels:
      app: a2a-go-researcher
  template:
    metadata:
      labels:
        app: a2a-go-researcher
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-researcher
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["agent", "-c", "researcher"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-go-developer
  name: a2a-go-developer
spec:
  selector:
    matchLabels:
      app: a2a-go-developer
  template:
    metadata:
      labels:
        app: a2a-go-developer
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: a2a-go-developer
          imagePullPolicy: Always
          image: docker.io/theapemachine/a2a-go:latest
          command: ["agent", "-c", "developer"]
          ports:
            - containerPort: 3210
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: a2a-go-qdrant
  labels:
    app: a2a-go-qdrant
spec:
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: a2a-go-qdrant
  serviceName: a2a-go-qdrant-headless
  template:
    metadata:
      annotations:
        checksum/config:
      labels:
        app: a2a-go-qdrant
    spec:
      imagePullSecrets:
        - name: a2a-go-qdrant
      priorityClassName: ""
      shareProcessNamespace: false
      initContainers:
        - name: ensure-dir-ownership
          image: docker.io/theapemachine/a2a-go:latest
          command:
            - chown
            - -R
            - 1000:1000
            - /qdrant/storage
            - /qdrant/snapshots
          volumeMounts:
            - name: qdrant-storage
              mountPath: /qdrant/storage
            - name: qdrant-snapshots
              mountPath: /qdrant/snapshots
      containers:
        - name: a2a-go-qdrant
          image: docker.io/theapemachine/a2a-go:latest
          imagePullPolicy: Always
          env:
            - name: QDRANT_INIT_FILE_PATH
              value: /qdrant/init/.qdrant-initialized
            - name: QDRANT_CONFIG_FILE_PATH
              value: /qdrant/config/production.yaml
            - name: QDRANT_DATA_PATH
              value: /qdrant/storage
            - name: QDRANT_SNAPSHOTS_PATH
              value: /qdrant/snapshots
          command: ["/bin/bash", "-c"]
          args:
            - /bin/bash
            - -c
            - |
              /qdrant/init/.qdrant-initialized
              /qdrant/config/production.yaml
              /qdrant/storage
              /qdrant/snapshots
          ports:
            - name: http
              containerPort: 6333
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 6333
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 6333
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 6333
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
      restartPolicy: Always
      serviceAccountName: a2a-go-qdrant
      volumes:
        - name: qdrant-config
          configMap:
            name: a2a-go-qdrant
            defaultMode: 0755
        - name: qdrant-storage
          emptyDir: {}
        - name: qdrant-snapshots
          emptyDir: {}
        - name: qdrant-init
          emptyDir: {}
        - name: qdrant-secret
          secret:
            secretName: a2a-go-qdrant-apikey
            defaultMode: 0600
          volumeMounts:
            - name:
                {
                  {
                    .Values.persistence.storageVolumeName | default "qdrant-storage",
                  },
                }
              mountPath: /qdrant/storage
              subPath: qdrant-storage
            - name: qdrant-config
              mountPath: /qdrant/config/initialize.sh
              subPath: initialize.sh
            - name: qdrant-config
              mountPath: /qdrant/config/production.yaml
              subPath: production.yaml
            - name: qdrant-secret
              mountPath: /qdrant/config/local.yaml
              subPath: local.yaml
            - name: qdrant-snapshot-restoration
              mountPath: /qdrant/snapshots
            - name:
                {
                  {
                    .Values.snapshotPersistence.snapshotsVolumeName | default "qdrant-snapshots",
                  },
                }
              mountPath: /qdrant/snapshots
              subPath: qdrant-snapshots
            - name: qdrant-init
              mountPath: /qdrant/init
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      nodeSelector:
        "kubernetes.io/os": linux
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: a2a-go-qdrant
              topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "kubernetes.io/os"
          operator: "Equal"
          value: "linux"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: a2a-go-qdrant
  volumeClaimTemplates:
    - metadata:
        name: qdrant-storage
        labels:
          app: a2a-go-qdrant
        annotations:
          checksum/config:
      spec:
        storageClassName: a2a-go-qdrant-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: qdrant-snapshots
        labels:
          app: a2a-go-qdrant
        annotations:
          checksum/config:
      spec:
        storageClassName: a2a-go-qdrant-snapshots
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
